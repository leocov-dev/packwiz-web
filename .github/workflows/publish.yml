name: publish docker image

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # First job: Build platform-specific images and push them by digest
  build:
    name: Build ${{ matrix.platform }}
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-24.04
          - platform: linux/arm64
            runner: ubuntu-24.04-arm

    runs-on: ${{ matrix.runner }}
      
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Container metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=semver,pattern={{version}}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push-by-digest=true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          build-args: |
            VERSION_TAG=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            CF_API_KEY=${{ secrets.CF_API_KEY }}

      - name: Export digest
        id: digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Set platform name
        id: platform
        run: echo "name=$(echo ${{ matrix.platform }} | tr '/' '-')" >> $GITHUB_OUTPUT

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ steps.platform.outputs.name }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  # Second job: Create and push manifest
  merge:
    name: Merge and push manifest
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=semver,pattern={{version}}

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        run: |
          digests=$(ls /tmp/digests)

          # Assemble sources array
          sources=""
          for digest in $digests; do
            sources="$sources ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@sha256:$digest"
          done

          # Add one --tag for each tag in steps.meta.outputs.tags
          tag_args=""
          for tag in $(echo "${{ steps.meta.outputs.tags }}" | tr ',' ' '); do
            tag_args="$tag_args --tag $tag"
          done

          # Show what will be run for easier debugging
          echo docker buildx imagetools create $tag_args $sources

          # Run the manifest create command with all the tags
          docker buildx imagetools create $tag_args $sources